<!DOCTYPE html>
<html lang="en">
  	<head>
		<title>Eligibility</title>
				
		<!--#include virtual="../common/header.html" -->
		
	
  	</head>

  	<body>
		<!--#include virtual="../common/nav.html" -->
		
		<!-- Begin page content -->
		<div class="container-fluid" id="main">
			
			<div class="row-fluid">
				<!-- Main page content -->
					
					<div class="page-header">
					<!-- do not display.  must have permission to see IUI page. -->					 
<!-- 					   <a href="../interim-ui/clean-data.shtml" class="right" id="academic-roster-url">Go to Academic History Data page</a>  -->
					   <h1>Eligibility</h1>
					</div>
				
					<p id="instructions">Your faculty are eligible for the following academic personnel actions. For the next few months, department staff are cleaning up academic history data, which may affect Eligibility.  So if you see something that isn't correct, don't panic!</p>
					
					<!--Filters-->
					
					<label for="action-filters">Show Only</label>
					<ul id="action-filters">
						<li><input class="filter-checkbox" type="checkbox" id="mandatory-actions-checkbox" name="mandatory-actions-checkbox" title="Mandatory actions checkbox" value="mandatory-actions">Mandatory Actions</li>
						<!--<li><input class="filter-checkbox" type="checkbox" id="deferred-actions-checkbox" name="deferred-actions-checkbox" title="Deferred actions checkbox" value="deferred-actions">Deferred Actions</li>-->
						<li><input class="filter-checkbox" type="checkbox" id="waiver-checkbox" name="waiver-checkbox" title="Waiver checkbox" value="waiver">Appointees based in your department (or joints without a waiver)&thinsp; <a role="button" aria-label="help tip" trigger="hover" data-trigger="hover" tabindex="0" class="ttip" data-placement="top" data-toggle="popover" white-space="pre-wrap" data-html="true" data-content="Checking this box will display only appointees eligible for review by your department (i.e., it will filter out joint appointees with review waivers)."><span aria-hidden="true" class="icon-help-circled help ttip"></span></a></li>		
					</ul>
					
					<!--<label for="year-filter">Review Year</label>
					<select id="year-filter">

					</select>-->
					  		
			  		<div id="table-scroll-area">
				  		<table id="eligibility-table" class="display nowrap" cellspacing="0" width="100%">
							<thead>
								<tr>							    	
							    	<th class="nosort">UID</th>
							    	<th class="column-width">Name</th>							    	
							    	<th>School</th>
							    	<th>Division</th>
							    	<th>Department</th>
							    	<th>Area&thinsp; <a role="button"data-container="body"   aria-label="help tip" trigger="hover" data-trigger="hover" tabindex="0" class="ttip" data-placement="top" data-toggle="popover" white-space="pre-wrap" data-html="true" data-content="We are using this term to represent sub-departments. Some schools call these divisions, some call them sections. We agreed on this term so as not be confused with the Divisions in the College of L&S. For most departments, these columns will be N/A."><span aria-hidden="true" class="icon-help-circled help ttip"></span></a></th>
							    	<th>Specialty&thinsp; <a role="button" data-container="body"  aria-label="help tip" trigger="hover" data-trigger="hover" tabindex="0" class="ttip" data-placement="top" data-toggle="popover" white-space="pre-wrap" data-html="true" data-content="We are using this term to represent entities that are a subset of an Area.  These specialties may represent topical groupings within the Area."><span aria-hidden="true" class="icon-help-circled help ttip"></span></a></th>
							    	<th>Affiliation&thinsp; <a role="button" data-container="body"  aria-label="help tip" trigger="hover" data-trigger="hover" tabindex="0" class="ttip" data-placement="top" data-toggle="popover" white-space="pre-wrap" data-html="true" data-content="Primary indicates that your department is the appointee's home department.  Additional means the appointee has a joint or split appointment in your department, with a primary appointment elsewhere."><span aria-hidden="true" class="icon-help-circled help ttip"></span></a></th>
							    	<th>Academic Year</th>
							    	<th>Action Type</th>
							    	<th>Current Series</th>
							    	<th>Current Rank/Step</th>
							    	<th>Years at Current Rank</th>
							    	<th>Years at Current Step</th>
							    	<th>Eligible Rank/Step</th>									    	
							    	<th>Effective Date</th>										    	
						    	</tr>
						    	<tr>									
									<td class="column-filter"></td>
									<td class="column-filter"></td>
									<td class="column-filter">
										<select id="eligible-school-select" aria-label="select a school" class="form-control">
										</select>
									</td>
									<td class="column-filter">
										<select id="eligible-division-select" aria-label="select a division" class="form-control">
										</select>
									</td>
									<td class="column-filter">
										<select id="eligible-department-select" aria-label="select a department" class="form-control">
										</select>
									</td>
									<td class="column-filter">
										<select id="eligible-area-select" aria-label="select an area" class="form-control">
										</select>
									</td>
									<td class="column-filter">
										<select id="eligible-specialty-select" aria-label="select a specialty" class="form-control">
										</select>
									</td>
									<td class="column-filter">
										<select id="affiliation-select" aria-label="select an affiliation" class="form-control">
										    <option value="All">All</option>
											<option value="Additional">Additional</option>
											<option value="Primary">Primary</option>
										</select>
									</td>
									<td class="column-filter">
										<select id="eligible-academicYear-select" aria-label="select an academic year" class="form-control">
										</select>
									</td>
									<td class="column-filter">
										<select id="eligible-action-select" aria-label="select an action" class="form-control">
										</select>
									</td>
									
									<td class="column-filter">
										<select id="eligible-series-select" aria-label="select a series" class="form-control">
										</select>
									</td>
									
									<td class="column-filter"></td>
									<td class="column-filter"></td>
									<td class="column-filter"></td>		
									<td class="column-filter"></td>
									<td class="column-filter"></td>									
								</tr>
						    </thead>
						    <tbody>
						    	
						    </tbody>
						</table>
					</div>
			</div>
		</div>

		<!-- Modal -->
		<div class="modal fade" id="infoModal" tabindex="-1" role="dialog" aria-labelledby="infoModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
						<h4 class="modal-title" id="infoModalLabel">Please Note</h4>
					</div>
					<div class="modal-body">
						<form id="action-form" role="form">
  							<div class="form-group">
    							<p>This feature is coming soon!</p>
  							</div>
						</form>
					</div>
				</div>
			</div>
		</div>
				
		<!-- Generic Error -->    
        <div class="modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" id="error">
            <div class="modal-dialog ">
                <div class="modal-content">
                    <div class="modal-header modal-danger">
                        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                        <h2 class="white">Error</h2>
                    </div>
                    <div class="modal-body">
                    
                    </div> <!-- /modal-body -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger left" data-dismiss="modal">Okay</button>
                    </div> <!-- /modal-footer -->
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->  
        
		<!--#include virtual="../common/footer.html" -->

		<!--#include virtual="../common/js-includes.html" -->
		
		<script language="javascript" src="../javascript/select-row.js"></script>
								
		<!-- JavaScript Functionality -->
		<script>
			//Highlight the active page in the leftnav
			$('#leftnav-initiate-cases').addClass('active');
			var eligibilityData;
			$(document).ready(function() {
				//Get AJAX data
				//$("#academic-roster-url").hide();
				initializeTable();
			});
			
			//responsive table height upon load
            $ (document).ready(function() {
          	  $('.dataTables_scrollBody').css('height', ($(window).height() - 475));
          	});
          //responsive table height upon window resize
            $(window).resize(function() {
            	  $('.dataTables_scrollBody').css('height', ($(window).height() - 475));
            	});
          
            TableTools.BUTTONS.download = {
                "sAction": "text",
                "sFieldBoundary": "",
                "sFieldSeperator": "\t",
                "sNewLine": "<br>",
                "sToolTip": "",
                "sButtonClass": "DTTT_button_text",
                "sButtonClassHover": "DTTT_button_text_hover",
                "sButtonText": "Download",
                "mColumns": "all",
                "bHeader": true,
                "bFooter": false,
                "sDiv": "",
                "fnMouseover": null,
                "fnMouseout": null,
                "fnClick": function( nButton, oConfig ) {
                      var oParams = this.s.dt.oApi._fnAjaxParameters( this.s.dt );
                      var mandatory = $("#mandatory-actions-checkbox").is(":checked") ? 'true' : 'false';
                      var waiver = $("#waiver-checkbox").is(":checked") ? 'true' : 'false';
	                  var affiliation = $("#affiliation-select :selected").text();
	                  var actionType = $("#eligible-action-select :selected").text();
	                  var series = $("#eligible-series-select :selected").text();
	                  var academicYear = $("#eligible-academicYear-select :selected").text();
	                  var school = $("#eligible-school-select :selected").text();
	                  var division = $("#eligible-division-select :selected").text();
	                  var department = $("#eligible-department-select :selected").text();
	                  var area = $("#eligible-area-select :selected").text();
	                  var specialty = $("#eligible-specialty-select :selected").text();
                      var iframe = document.createElement('iframe');
                      iframe.style.height = "0px";
                      iframe.style.width = "0px";
                      iframe.src = oConfig.sUrl+"?"+$.param(oParams)+"&eligibility=true&mandatory="+mandatory+"&waiver="+waiver+"&affiliation="+affiliation+"&actionType="+actionType+"&series="+series+"&academicYear="+academicYear+"&school="+school+"&division="+encodeURIComponent(division)+"&department="+department+"&area="+area+"&specialty="+specialty;
                      document.body.appendChild( iframe );
                    },
                "fnSelect": null,
                "fnComplete": null,
                "fnInit": null
            };			
            
			//Eligibility table 
			function initializeTable() {
				var globalJson;
					
				var table = $('#eligibility-table').DataTable( {
					"bProcessing" : true,
				    "bServerSide" : true,
		            "bDeferRender": true,
		            dom: "fT<'clear'>rBtiS",
		            "sScrollY": ($(window).height() - 475),
					scroller: {	displayBuffer: 4,
								boundaryScale: .5			
						},
					"language": {	//loading icon and colvis button
					    "sProcessing": "<img src='../images/gears.gif'><br>Eligibility Machine Calculating",
					    "search": '<span aria-hidden="true" class="icon-search" alt="search"></span>',
					   	buttons: {
				                colvis: 'Change Columns' //text of button
				            }
						},
					//scrollY:       "510px", //set height of table
					scrollX:        true, // allow horizontal scrolling
					"orderClasses": false, // Always turn this off.  It highlights the sorted column.  Causes slowness.
					//scrollCollapse: true,
					ifixedColumns: {leftColumns: 2},
					"oTableTools": {
                        "sSwfPath": "../plugins/DataTables-1.10.3/extensions/TableTools/swf/copy_csv_xls_pdf.swf",
                        "aButtons": [
                          {
                            "sExtends": "download",
                            "sButtonText": "Export to Excel",
                            "sButtonClass": "DTTT_button_csv",
                            "sButtonClassHover": "DTTT_button_csv_hover",
                            "sUrl": "/userInterface/rest/eligibles/downloadCSV"
                          }]
                    },
					ajax:{
		  				cache:false,
	                    url: "/userInterface/rest/eligibles/", 
	                    dataSrc: 'data',
	                    "data": function ( d ) {
	                        d.mandatory = $("#mandatory-actions-checkbox").is(":checked") ? 'true' : 'false';
	                        d.waiver = $("#waiver-checkbox").is(":checked") ? 'true' : 'false';
		                    d.affiliation = $("#affiliation-select :selected").text();
		                    d.actionType = $("#eligible-action-select :selected").text();
		                    d.series = $("#eligible-series-select :selected").text();
		                    d.academicYear = $("#eligible-academicYear-select :selected").text();
		                    d.school = $("#eligible-school-select :selected").text();
		                    d.division = $("#eligible-division-select :selected").text();
		                    d.department = $("#eligible-department-select :selected").text();
		                    d.area = $("#eligible-area-select :selected").text();
		                   	d.specialty = $("#eligible-specialty-select :selected").text();
	                    },
	                    type: 'GET',
	                    dataType: 'json',
	                    contentType: 'application/json',
	                    mimeType: 'application/json',
	                    error:function(jqXHR, textStatus, errorThrown) {
	                    	if (jqXHR.responseText !== "") {  
		                        	$("#error .modal-body").empty();
		                            $("#error .modal-body").append(jqXHR.responseText);
		                            $('#error').modal('show');
		                        	console.log("Error: ", errorThrown);
		                        	console.log(jqXHR); 
		                        	console.log("Text Status: ", textStatus);
		                	} else {                    		
		                            console.log("Error: ", errorThrown);
		                            console.log(jqXHR); 
		                            console.log("Text Status: ", textStatus);	           
		                      		window.location.assign("/userInterface/ui/error/access-error.shtml");		
		                      
		                    }  
	                    } 
	                },
					buttons: [
					            'colvis'
					],
						columns: [			            
				       	{data: "uid", bVisible: false},
			            {data: "name"},
			            {data: "school", bVisible: false},
			            {data: "division", bVisible: false},
			            {data: "department"},
			            {data: "area", bVisible: false},
			            {data: "specialty", bVisible: false},
			            {data: "affiliation"},
			            {data: "academicYear"},
			            {data: "actionType"},			           
			            {data: "currentSeries"},
			            {
			            	mRender:	function (data, type, full) {	
			            					var rank = full.currentRank;
			            					var step = full.currentStep;
			            					return rank + " " + step;
				            	  	},
				      		name: "currentRankStep", 
				      		defaultContent: ""
				       	},
				       	{
				       		mRender:	function (data, type, full) {	
				       			
				        					if(full.yearsAtCurrentRank!= null && full.yearsAtCurrentRank!= '' && full.yearsAtCurrentRank!= undefined && full.yearsAtCurrentRank.indexOf("0 yr,") > -1)
				        					   return full.yearsAtCurrentRank.replace("0 yr,","");
				        					else
				        					   return full.yearsAtCurrentRank;
				            	  	},
				      		name: "yearsAtCurrentRank", 
				      		defaultContent: "",
				      		bVisible: false
				      	},
				      	{
				       		mRender:	function (data, type, full) {	
				       			
				        					if(full.yearsAtCurrentStep!= null && full.yearsAtCurrentStep!= '' && full.yearsAtCurrentStep!= undefined && full.yearsAtCurrentStep.indexOf("0 yr,") > -1)
				        					   return full.yearsAtCurrentStep.replace("0 yr,","");
				        					else
				        					   return full.yearsAtCurrentStep;
				            	  	},
				      		name: "yearsAtCurrentStep", 
				      		defaultContent: "",
				      		bVisible: false
				      	},
				       	/* {data: "yearsAtCurrentRank", bVisible: false}, */
			            /* {data: "yearsAtCurrentStep", bVisible: false}, */
			            {
			            	mRender:	function (data, type, full) {	
			            					var rank = full.eligibleRank;
			            					var step = full.eligibleStep;
			            					return rank + " " + step;
				            	  	},
				      		name: "eligibleRankStep", 
				      		defaultContent: ""
				       	},
			            {data: "effectiveDate"},			            
			        ],
			        columnDefs: [{
			            "targets": 'nosort',
			            "orderable": false
			        }],
			        "order": [], // prevents sorting icon on column 0, UID, upon initial page load 
			       	
			        bSortCellsTop: true, //Sort on the top header cell (not the bottom)
			        sAjaxDataProp: "", //Use blank instead of aaData as array name
			        //lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]], //Show # of entries
			        //iDisplayLength: 50, //Show # of entries default
				    fnInitComplete: function(oSettings, json) {
				    	globalJson = json;
				        updateAllFilters(globalJson);
				        table.columns.adjust();
				        
				    }
			    });
				
		
								
				new $.fn.dataTable.FixedColumns( table,{
					 iLeftColumns:2
				}); //needed to fix double header issue
			  	
				 table.columns.adjust(); // fixes misaligned header on first load  

				setFilterEventListeners();
							
				changeDTstyles();
				
				//Set a listener for when column visibility is toggled on/off - must update the column filter otherwise it won't display
				table.on('column-visibility.dt', function ( e, settings, column, state ) {
					updateChangedColumnFilter(globalJson, column);
					setFilterEventListeners();
					 table.columns.adjust(); // fixes misaligned header on first load  
					
				});
				console.log("After call: " + new Date($.now()));
			}
			
			function updateAllFilters(json) {	
				var academicYearList = json.academicYearList;
				var academicYearDropdown = '';
					academicYearDropdown += '<option value="All">All</option>';
				if (academicYearList != undefined) {
					$.each(academicYearList, function(index, academicYearString) {
						academicYearDropdown += '<option value='+academicYearString+'>' + academicYearString + '</option>';
					});
				}
				$("#eligible-academicYear-select").html("");
				$("#eligible-academicYear-select").html(academicYearDropdown); 
				var schoolList = json.schoolList;
				var schoolDropdown = '';
					schoolDropdown += '<option value="All">All</option>';
				if (schoolList != undefined) {
					$.each(schoolList, function(index, schoolString) {
						schoolDropdown += '<option value='+schoolString+'>' + schoolString + '</option>';
					});
				}
				$("#eligible-school-select").html("");
				$("#eligible-school-select").html(schoolDropdown); 
				var divisionList = json.divisionList;
				var divisionDropdown = '';
					divisionDropdown += '<option value="All">All</option>';
				if (divisionList != undefined) {
					$.each(divisionList, function(index, divisionString) {
						divisionDropdown += '<option value='+divisionString+'>' + divisionString + '</option>';
					});
				}
				$("#eligible-division-select").html("");
				$("#eligible-division-select").html(divisionDropdown); 
				var departmentList = json.departmentList;
				var departmentDropdown = '';
					departmentDropdown += '<option value="All">All</option>';
				if (departmentList != undefined) {
					$.each(departmentList, function(index, departmentString) {
						departmentDropdown += '<option value='+departmentString+'>' + departmentString + '</option>';
					});
				}
				$("#eligible-department-select").html("");
				$("#eligible-department-select").html(departmentDropdown); 
				var actionTypeList = json.actionTypeList;
				var actionTypeDropdown = '';
					actionTypeDropdown += '<option value="All">All</option>';
				if (actionTypeList != undefined) {
					$.each(actionTypeList, function(index, actionTypeString) {
						actionTypeDropdown += '<option value='+actionTypeString+'>' + actionTypeString + '</option>';
					});
				}
				$("#eligible-action-select").html("");
				$("#eligible-action-select").html(actionTypeDropdown); 
				var seriesList = json.seriesList;
				var seriesDropdown = '';
					seriesDropdown += '<option value="All">All</option>';
				if (seriesList != undefined) {
					$.each(seriesList, function(index, seriesString) {
						seriesDropdown += '<option value='+seriesString+'>' + seriesString + '</option>';
					});
				}
				$("#eligible-series-select").html("");
				$("#eligible-series-select").html(seriesDropdown); 
				var areaList = json.areaList;
				var areaDropdown = '';
					areaDropdown += '<option value="All">All</option>';
				if (areaList != undefined) {
					$.each(areaList, function(index, areaString) {
						areaDropdown += '<option value='+areaString+'>' + areaString + '</option>';
					});
				}
				$("#eligible-area-select").html("");
				$("#eligible-area-select").html(areaDropdown); 
				var specialtyList = json.specialtyList;
				var specialtyDropdown = '';
				specialtyDropdown += '<option value="All">All</option>';
				if (specialtyList != undefined) {
					$.each(specialtyList, function(index, specialtyString) {
						specialtyDropdown += '<option value='+specialtyString+'>' + specialtyString + '</option>';
					});
				}
				$("#eligible-specialty-select").html("");
				$("#eligible-specialty-select").html(specialtyDropdown); 
			}
			
			function updateChangedColumnFilter(json, column) {
				if (column === 8) {
					var academicYearList = json.academicYearList;
					var academicYearDropdown = '';
						academicYearDropdown += '<option value="All">All</option>';
					if (academicYearList != undefined) {
						$.each(academicYearList, function(index, academicYearString) {
							academicYearDropdown += '<option value='+academicYearString+'>' + academicYearString + '</option>';
						});
					}
					$("#eligible-academicYear-select").html("");
					$("#eligible-academicYear-select").html(academicYearDropdown); 
				}
				else if (column === 2) {
					var schoolList = json.schoolList;
					var schoolDropdown = '';
						schoolDropdown += '<option value="All">All</option>';
					if (schoolList != undefined) {
						$.each(schoolList, function(index, schoolString) {
							schoolDropdown += '<option value='+schoolString+'>' + schoolString + '</option>';
						});
					}
					$("#eligible-school-select").html("");
					$("#eligible-school-select").html(schoolDropdown); 
				}
				else if (column === 3) {
					var divisionList = json.divisionList;
					var divisionDropdown = '';
						divisionDropdown += '<option value="All">All</option>';
					if (divisionList != undefined) {
						$.each(divisionList, function(index, divisionString) {
							divisionDropdown += '<option value='+divisionString+'>' + divisionString + '</option>';
						});
					}
					$("#eligible-division-select").html("");
					$("#eligible-division-select").html(divisionDropdown); 
				}
				else if (column === 4) {
					var departmentList = json.departmentList;
					var departmentDropdown = '';
						departmentDropdown += '<option value="All">All</option>';
					if (departmentList != undefined) {
						$.each(departmentList, function(index, departmentString) {
							departmentDropdown += '<option value='+departmentString+'>' + departmentString + '</option>';
						});
					}
					$("#eligible-department-select").html("");
					$("#eligible-department-select").html(departmentDropdown); 
				}
				else if (column === 9) {
					var actionTypeList = json.actionTypeList;
					var actionTypeDropdown = '';
						actionTypeDropdown += '<option value="All">All</option>';
					if (actionTypeList != undefined) {
						$.each(actionTypeList, function(index, actionTypeString) {
							actionTypeDropdown += '<option value='+actionTypeString+'>' + actionTypeString + '</option>';
						});
					}
					$("#eligible-action-select").html("");
					$("#eligible-action-select").html(actionTypeDropdown); 
				}
				else if (column === 10) {
					var seriesList = json.seriesList;
					var seriesDropdown = '';
						seriesDropdown += '<option value="All">All</option>';
					if (seriesList != undefined) {
						$.each(seriesList, function(index, seriesString) {
							seriesDropdown += '<option value='+seriesString+'>' + seriesString + '</option>';
						});
					}
					$("#eligible-series-select").html("");
					$("#eligible-series-select").html(seriesDropdown); 
				}
				else if (column === 5) {
					var areaList = json.areaList;
					var areaDropdown = '';
						areaDropdown += '<option value="All">All</option>';
					if (areaList != undefined) {
						$.each(areaList, function(index, areaString) {
							areaDropdown += '<option value='+areaString+'>' + areaString + '</option>';
						});
					}
					$("#eligible-area-select").html("");
					$("#eligible-area-select").html(areaDropdown); 
				}
				else if (column === 6) {
					var specialtyList = json.specialtyList;
					var specialtyDropdown = '';
					specialtyDropdown += '<option value="All">All</option>';
					if (specialtyList != undefined) {
						$.each(specialtyList, function(index, specialtyString) {
							specialtyDropdown += '<option value='+specialtyString+'>' + specialtyString + '</option>';
						});
					}
					$("#eligible-specialty-select").html("");
					$("#eligible-specialty-select").html(specialtyDropdown); 
				}
				else {
					//Do nothing
				}
			}
			
			function setFilterEventListeners() {
				//Checkbox filters for Mandatory Actions and Deferred Actions
			  	//DataTables vs dataTables is messing it up somehow: http://www.datatables.net/manual/installation
			  	var tableFilter = $('#eligibility-table').dataTable();
				 $("#mandatory-actions-checkbox").click(function() {
					if ($("#mandatory-actions-checkbox").is(":checked")) {
						tableFilter.fnFilter('true', 15);
					} 
					else {
						tableFilter.fnFilter('', 15);
					}
				}); 
				 $("#waiver-checkbox").click(function() {
					if ($("#waiver-checkbox").is(":checked")) {
						tableFilter.fnFilter('false', 14);
					} 
					else {
						tableFilter.fnFilter('', 14);
					}
				}); 
				 $("#affiliation-select").change(function () {
                     var selectedText = $(this).find("option:selected").text();
                     var selectedValue = $(this).val();
                     tableFilter.fnFilter(selectedValue, 7);
                 });
				 $("#eligible-action-select").change(function () {
                     var selectedText = $(this).find("option:selected").text();
                     var selectedValue = $(this).val();
                     tableFilter.fnFilter(selectedValue, 9);
                 });
				 $("#eligible-series-select").change(function () {
                     var selectedText = $(this).find("option:selected").text();
                     var selectedValue = $(this).val();
                     tableFilter.fnFilter(selectedValue, 10);
                 });
				 $("#eligible-academicYear-select").change(function () {
                     var selectedText = $(this).find("option:selected").text();
                     var selectedValue = $(this).val();
                     tableFilter.fnFilter(selectedValue, 8);
                 });
				 $("#eligible-school-select").change(function () {
                     var selectedText = $(this).find("option:selected").text();
                     var selectedValue = $(this).val();
                     tableFilter.fnFilter(selectedValue, 2);
                 });
				 $("#eligible-division-select").change(function () {
                     var selectedText = $(this).find("option:selected").text();
                     var selectedValue = $(this).val();
                     tableFilter.fnFilter(selectedValue, 3);
                 });
				 $("#eligible-department-select").change(function () {
                     var selectedText = $(this).find("option:selected").text();
                     var selectedValue = $(this).val();
                     tableFilter.fnFilter(selectedValue, 4);
                 });
				 $("#eligible-area-select").change(function () {
                     var selectedText = $(this).find("option:selected").text();
                     var selectedValue = $(this).val();
                     tableFilter.fnFilter(selectedValue, 5);
                 });
				 $("#eligible-specialty-select").change(function () {
                     var selectedText = $(this).find("option:selected").text();
                     var selectedValue = $(this).val();
                     tableFilter.fnFilter(selectedValue, 6);
                 });
			}
						
			function generateActionButton() {
				$('#action-filters').after('<div id="actions-dropdown" class="btn-group">'
				+ '<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">'
				+ 'Actions <span class="caret"></span>'
				+ '</button>'
				+ '<ul class="dropdown-menu" role="menu">'
				+ '<li><a href="#" data-toggle="modal" data-target="#infoModal">Intiate Cases</a></li>'
				+ '<li><a href="#" data-toggle="modal" data-target="#infoModal">Send Email</a></li>'
				+ '</ul>'
				+ '</div>');
			}
			/* function determineAcademicRosterUrl() {
				//If role is DA or SA in SoM, hide the Add Person button
				var access = eligibilityData.adminData.resourcesArray; 
				var academicRosterUrl = false;
				if (access != undefined) {
					$.each(access, function(index, acs) {
						if (acs == "interim_ui") {
							academicRosterUrl = true;
						}
					});
				}
				return academicRosterUrl;
}; */
		</script>
  	</body>
</html>